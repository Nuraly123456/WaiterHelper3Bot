from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram import F
import asyncio
from collections import defaultdict

TOKEN = "8098085060:AAGsBsXnffx7AWOxFbRMoQ1jPeXzTGswOLE"  # Сіздің боттың токенін осы жерге қосыңыз
bot = Bot(token=TOKEN)
dp = Dispatcher()

# Меню (тағам атауы -> бағасы)
MENU = {
    "ДРИП Ефиопия ": 500,
    "ДРИП КОЛУМБИЯ": 500,
    "ДРИП КЕНИЯ": 500,
    "ФИЛЬТР 300 мл": 1990,
    "Батч 300 мл": 890,
    "В и т а м и н н ы й ш о т": 2490,
    "Эспрессо 60": 790,
    "Американо 02": 790,
    "Американо 03": 890,
    "Американо 04": 1190,
    "Кортадо": 1990,
    "Флэт уайт 250": 1190,
    "Капучино 02": 890,
    "Капучино 03": 1190,
    "Капучино 04": 1290,
    "Моккачино 02": 1190,
    "Моккачино 03": 1390,
    "Латте 03": 1190,
    "Латте 04": 1390,
    "Раф 03": 1490,
    "Раф 04": 1690,
    "Аффогато 150": 1490,
    "Воронка 300": 1990,
    "Раф сникерс 03": 1490,
    "Раф сникерс 04": 1690,
    "Матча 03": 1290,
    "Матча 04 ": 1390,
    "Какао 02": 890,
    "Какао 03": 990,
    "Какао 04": 1190,
    "Горячий шоколад 02": 890,
    "Горячий шоколад 03": 990,
    "Горячий шоколад 04": 1190,
    "Марокан шайы 04": 1190,
    "чайник Марокан шайы ": 2490,
    "Жидекті шай/Ягодный чай 04": 1190,
    "чайник Жидекті шай/Ягодный чай ": 2490,
    "Зімбір шайы/Имбирный чай 04 мл": 1190,
    "чайник Зімбір шайы/Имбирный чай": 2490,
    "Ташкент шайы/Ташкентский чай 04": 1190,

"чайник Ташкент шайы/Ташкентский чай": 2490,

"Шырғанақ шайы/Облепиховый чай 04": 1190,

"чайник Шырғанақ шайы/Облепиховый чай": 2490,

"Масала шайы/Масала чай 04": 1190,

"чайник Масала шайы/Масала чай": 2490,

"Манго-Маракуйя шайы/Манго-Маракуйя чай 04": 1190,

"чайник Манго-Маракуйя шайы/Манго-Маракуйя чай": 2490,

"Жеміс шайы/Фруктовый чай 04": 1190,

"чайник Жеміс шайы/Фруктовый чай": 2490,

"Түрік шайы/Турецкий чай 04": 2790,

"Бүлдірген мен кілегей/Земляника и сливки 04": 1190,

"чайник Бүлдірген мен кілегей/Земляника и сливки": 2490,

"Ройбуш 04": 1190,

"чайник Ройбуш": 2490,

"Шие мен көкжидек қосылған шай/Черника с вишней 04": 1190,

"чайник Шие мен көкжидек қосылған шай/Черника с вишней": 2490,

"Таулы шалғын/Горный луг 04": 1190,

"чайник Таулы шалғын/Горный луг": 2490,

"Сүт улун шайы/Молочный улун 04": 1190,

"чайник Сүт улун шайы/Молочный улун": 2490,

"Тегуанинь 04": 1190,
"чайник Тегуанинь": 2490,
"Черничный улун": 1790,
"Орео": 1790,
"Клубника-роза": 1790,
"Банан-соленая карамель": 1790,
"Ice Coffee 400 мл": 1390,
"Ice капучино": 1390,
"Ice американо": 1490,
"Алматино": 2190,
"Эспрессо тоник Бамбл": 1890,
"Фрапучино": 1890,
"Гляссе": 1690,
"Спениш латте": 1390,
"Ice батч": 1490,
"Ice латте": 1390,
"Барбарис-Ананас 04": 1290,
"литр Барбарис-Ананас ": 2290,
"Киви-лайм 04": 1290,
"литр Киви-лайм": 2290,
"Жидек миксі/ Ягодный микс 04": 1290,
"литр Жидек миксі/ Ягодный микс": 2290,
"Мохито 04": 1290,
"литр Мохито": 2290,
"Манго 04": 1290,
"литр Манго": 2290,
"Қымыздық-ананас/ Щавель-ананас-маракуйя 04": 1490,
"литр Қымыздық-ананас/ Щавель-ананас-маракуйя": 2490,
"Вафля-попкорн": 1990,
"Банан коктейлі/ Банановый": 1990,
"Құлпынай коктейлі/ Клубничный": 1990,
"Шоколадты коктейль/ Шоколадный": 1990,
"Ванильді коктейль/ Ванильный": 1990,
"Авокадо": 2790,
"Банан-шие/ Банан-вишня": 2490,
"Қарақат-банан/ Смородина-банан": 2490,
"Жеміс микс/ Фруктовый микс": 2490,
"Киви-банан": 2490,
"Көкжидек смузи/ Черничный смузи": 2490,
"Сникерс-Орео": 2490,
"Апельсин": 2290,
"Микс (апельсин, алма/ апельсин, яблоко)": 2290,
"Алма/ Яблоко": 2290,
"Алма/сәбіз": 2290,
"Яблоко/морковь": 2290,
"Ягодный 04": 1190,

"литр Ягодный": 1990,

"Манго-лайм 04": 1290,

"литр Манго-лайм": 2290,

"Апельсиновый 04": 1190,

"литр Апельсиновый": 1990,

"Жеміс микс/ Фруктовый микс 04": 1790,

"литр Жеміс микс/ Фруктовый микс": 1790,

"Жидекті микс/ Ягодный микс 04": 1790,

"литр Жидекті микс/ Ягодный микс": 1790,

"Манго Ананас 04": 1790,

"литр Манго Ананас": 1790,


"Поке-боул с курицей": 2990,
"Поке-боул с семгой": 3590,
"Поке-боул с креветками": 3590,
"Тойымды таңғы асы": 3990,
"Ауыл таңғы асы": 3290,
"Түрік таңғы асы": 3690,
"Бенни ысталған ақсеркесі": 2790,
"Гурман круассаны": 2790,
"Фитнес таңғы ас": 2990,
"Ағылшын таңғы асы": 3290,
"Ақсерке қосылған скрэмбл": 3290,
"Бавар таңғы асы": 3290,
"Скрэмбл тосты": 1790,
"Авокадо қосылған омлет": 2990,
"Классикалық омлет": 1990,
"Түйетауық қосылған скрэмбл": 2590,
"Шпинат қосылған глазунья": 2590,
"Кішігірім тойымды таңғы ас": 2790,
"Глазунья жұмыртқасынан таңғы ас": 1990,
"Таңқурай сорбетімен сұлы ботқасы": 1790,
"Сүзбелі құймақтар": 1990,
"Классикалық құймақтар": 1290,
"Сүзбе қосылған құймақтар": 1790,
"Алмұрт және көкжидек қосылған күріш ботқасы": 1790,
"Алмұрт пен ірімшік қосылған круассан": 2790,
"Бельгиялық вафли": 2490,
"Жеті қат аспанда": 2990,
"Йогурт қосылған гранола": 2290,
"Асаи боул": 3290,
"Банан мен жидектер қосылған сүзбе": 2790,
"Жұмыртқа": 150,
"Хлеб тартин": 190,
"Тост (белый/черный)": 190,
"Корнишоны": 250,
"Сливочное масло": 290,
"Сосиски (охотничьи/молочные)": 500,
"Творожный сыр": 300,
"Говяжий бекон": 490,
"Авокадо доп ": 790,
"Шампиньоны": 290,
"Сыр в ассортименте": 590,
"Турецкий симит": 290,
"Индейка": 490,
"Лосось": 890 ,
"Джем": 290 ,
"Пашот": 350 ,
"Мёд": 190 ,
"Сметана": 190 ,
"Бурек": 190 ,
"Курица отварная": 390,
"Микс салат": 550,
"Баялды мен сүзбе ірімшігі қосылған жылы салат": 3790,
"Асқабақ және страчателла ірімшігі қосылған салат": 2790  ,
"Сиыр еті тілімдерінен жасалған жылы салат": 3990,
"Сүзбе ірімшігі мен қызылша қосылған салат": 3790,
"Асшаян қосылған цезарь": 3290,
"Тауық еті қосылған цезарь": 2790,
"Грек салаты": 2790,
"Грин салаты": 2190,

 "Теңіз өнімдері қосылған том-ям": 3290,
 "Асқабақ кремді сорпасы": 1990,
 "Рамён": 2890,
 "Борщ": 2490,
 "Суп чечевичный": 1990,
 "Үйде пісірілген кеспе сорпа": 1990,
 "Үйде пісірілген тұшпара": 1990,
 "Фрикаделькалар қосылған сорпа": 2290,

 "Бұқтырылған сиыр қабырғалары": 3290,
 "Басмати күрішімен ұсынылатын көксерке филесі": 3290,
 "Картоп қосылған вареники": 1790,
 "Көкөністер мен күріш қосылған тәтті және қышқыл тұздықтағы тауық еті": 3290,
 "Кремді соус қосылған тауық еті": 3290,
 "Кремді соус қосылған сиыр еті": 3490,
 "Тауық еті қосылған шницель": 3290,
 "Терияки тауығы": 3290,

"Күріш": 990,
"Фри картоптары": 1190,
"Картоп езбесі": 990,

"Ақсерке қосылған паста": 3790,
"Болоньез пастасы": 2790,
"Альфредо пастасы": 3290,
"Тауық етінен жасалған стейк": 3690,

"Ақсерке қосылған стейк": 4790,
"Сиыр етінен жасалған шұжықтар": 3990,
"Тауық етінен жасалған шұжықтар": 3790,

"Ақсерке қосылған круассан": 2590,
"Тауық еті қосылған круассан": 1990,
"Цезарь круассаны": 1990,
"Тауық еті қосылған тортилья": 1690,
"Ақсерке қосылған тортилья": 1990,
"Тауық еті қосылған панини": 2590,
"Тауық түйіршіктері қосылған панини": 2490,
"Тауық наггетстері қосылған бокс мастер": 1790,
"Түйетауық қосылған панини": 1990,
"Тауықтан жасалған клаб-сэндвич": 2790,
"Бургер с курицей": 2290,
"Стейк сэндвич": 2790,

"Құмырсқа ұясы": 1490,
"Наполеон": 1890,
"Вупи-пай": 1890,
"Бал торты": 1890,
"Чизкейк Qazaqsha": 2190,
"Моти": 1390,
"Бәліш": 990,
"Макарондар": 1590,
"Испан чизкейгі": 2490,
"Qazaqsha чизкейгі": 2190,

"Coca-cola банка": 690,
"Coca-cola шыны": 690,
"Sprite банка": 690,
"Sprite шыны": 690,
"Borjomi шыны": 990,
"Piko (апельсин, алма)": 450,

"Шоколад қосылған круассан": 1290,
"Қоюландырылған сүт қосылған круассан": 1290,
"Ірімшік қосылған круассан": 1290,
"Бадам қосылған круассан": 1390,
}
# Тапсырыстарды сақтау (әр тапсырыс үшін бағасы да сақталады)
orders = []


@dp.message(F.text == "/start")
async def start(message: Message):
    await message.answer(
        "Сәлем! Бұл тапсырыс қабылдау боты. Тапсырысты жай жаза беріңіз, ал күн соңында '/close_cash' командасын басып, есепті алыңыз.")


@dp.message(F.text == "/menu")
async def show_menu(message: Message):
    menu_text = "\n".join([f"{item} - {price} тг" for item, price in MENU.items()])
    await message.answer(f"📜 Меню:\n{menu_text}")


@dp.message(F.text == "/close_cash")
async def close_cash(message: Message):
    global orders
    if not orders:
        await message.answer("Бүгін ешқандай тапсырыс қабылданбады.")
        return

    summary = defaultdict(int)
    total = 0

    # Тапсырыстарды өңдеу және жалпы соманы есептеу
    for order, count in orders:
        summary[order] += count
        total += MENU[order] * count

    summary_text = "\n".join([f"{item}: {count} дана" for item, count in summary.items()])
    await message.answer(f"📊 Күндік есеп:\n{summary_text}\n💰 Жалпы касса: {total} тг")

    # Кассаны тазарту
    orders = []


@dp.message(F.text == "/remove_last")
async def remove_last_order(message: Message):
    if orders:
        removed_order, count = orders.pop()
        await message.answer(f"❌ Соңғы енгізілген тапсырыс өшірілді: {removed_order} x{count}")
    else:
        await message.answer("Өшіруге тапсырыс жоқ!")


@dp.message(F.text == "/clear_orders")
async def clear_orders(message: Message):
    global orders
    orders = []
    await message.answer("🗑 Барлық тапсырыстар тазартылды!")


@dp.message()
async def take_order(message: Message):
    order_text = message.text.strip().lower()  # Тапсырысты кіші әріпке ауыстыру
    orders_list = order_text.split(",")  # Тапсырыстарды үтірмен бөліп аламыз

    # Мәзірдегі барлық атауларды да кіші әріпке ауыстырып салыстыру
    menu_keys = [item.strip().lower() for item in MENU.keys()]

    added_orders = []
    not_found_orders = []

    for order in orders_list:
        order = order.strip()  # Әр тапсырыстың арасында артық бос орындарды алып тастау
        matching_orders = [item for item in menu_keys if order in item]

        if matching_orders:
            # Ұқсас тапсырыстарды тапқанда, бірінші табылған тапсырысты қолданамыз
            order_name = list(MENU.keys())[menu_keys.index(matching_orders[0])]
            orders.append((order_name, 1))  # Бірінші тапсырыс ретінде санын 1 деп аламыз
            added_orders.append(order_name)
        else:
            not_found_orders.append(order)

    # Жауап беру
    if added_orders:
        await message.answer(f"✅ Қабылданған тапсырыстар: {', '.join(added_orders)}")

    if not_found_orders:
        await message.answer(f"❌ Мәзірде жоқ тапсырыстар: {', '.join(not_found_orders)}")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
